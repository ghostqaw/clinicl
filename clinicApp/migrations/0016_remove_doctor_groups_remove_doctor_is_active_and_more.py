# Generated by Django 5.0.4 on 2024-05-19 09:50

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('clinicApp', '0015_doctor_groups_doctor_is_active_doctor_is_staff_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='doctor',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='is_staff',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='is_superuser',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='last_login',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='password',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='user_permissions',
        ),
        migrations.AlterField(
            model_name='doctor',
            name='email',
            field=models.EmailField(max_length=255),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='iin',
            field=models.CharField(max_length=12, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='patient',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='patient_set', related_query_name='patient', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='iin',
            field=models.CharField(primary_key=True, serialize=False, unique=True, verbose_name='IIN'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='patient_set', related_query_name='patient', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
